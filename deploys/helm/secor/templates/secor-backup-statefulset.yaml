# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "secor.fullname" . }}-backup
  labels:
    app: {{ template "secor.fullname" . }}-backup
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "secor.fullname" . }}-backup
  selector:
    matchLabels:
      app: {{ template "secor.fullname" . }}-backup
      release: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9102"
      labels:
        app: {{ template "secor.fullname" . }}-backup
        release: {{ .Release.Name }}

    spec:
      containers:
        - name: secor
          image: {{ .Values.image.prefix }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "CONFIG_FILE"
              value: "{{ .Values.secor.backup.configFile }}"
            - name: "LOG4J_CONFIGURATION"
              value: "{{ .Values.secor.backup.logConfigFile }}"
            - name: "GOOGLE_APPLICATION_CREDENTIALS"
              value: "/var/run/secret/cloud.google.com/service-account.json"
            - name: "ZOOKEEPER_QUORUM"
              value: "{{ .Values.secor.zookeeper.quorum }}"
            - name: "ZOOKEEPER_PATH"
              value: "/"
            - name: "JVM_MEMORY"
              value: "{{ .Values.secor.backup.jvm.memory }}"

          volumeMounts:
            - mountPath: "/opt/secor/config"
              name: "config"
            - name: "service-account"
              mountPath: "/var/run/secret/cloud.google.com"
            - name: "local-var"
              mountPath: "/mnt/secor_data/message_logs/backup"
          resources:
{{ toYaml .Values.secor.backup.resources | indent 12 }}

        - name: monitor
          image: {{ .Values.image.prefix }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "SECOR_MAIN_CLASS"
              value: "com.pinterest.secor.main.ProgressMonitorMain"
            - name: "GOOGLE_APPLICATION_CREDENTIALS"
              value: "/var/run/secret/cloud.google.com/service-account.json"
            - name: "CONFIG_FILE"
              value: "{{ .Values.secor.backup.configFile }}"
            - name: "LOG4J_CONFIGURATION"
              value: "{{ .Values.secor.backup.monitor.logConfigFile }}"
            - name: "ZOOKEEPER_QUORUM"
              value: "{{ .Values.secor.zookeeper.quorum }}"
            - name: "ZOOKEEPER_PATH"
              value: "/"
          volumeMounts:
            - mountPath: /opt/secor/config
              name: config
            - name: "service-account"
              mountPath: "/var/run/secret/cloud.google.com"
            - name: "local-var"
              mountPath: "/mnt/secor_data/message_logs/backup"

        - name: statsd
          image: {{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag }}
          imagePullPolicy: {{ .Values.exporter.image.pullPolicy }}
          ports:
           - containerPort: 9102
           - containerPort: 9125
             protocol: UDP

      volumes:
        - configMap:
            name: {{ template "secor.fullname" . }}-config
          name: config
        - name: "service-account"
          secret:
            secretName: {{ template "secor.fullname" . }}-service-account

  volumeClaimTemplates:
    - metadata:
        name: local-var
        labels:
          app: {{ template "secor.fullname" . }}-backup
        annotations:
          volume.beta.kubernetes.io/storage-class: "{{ .Values.secor.backup.storage.class }}"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ .Values.secor.backup.storage.size }}"
